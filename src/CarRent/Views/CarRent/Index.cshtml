@using CarRent.Models

@model CarSearchViewModel

@{
    ViewData["Title"] = "Rent Cars";
}

<h2>@ViewData["Title"]</h2>

<div class="wrapper">
    <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
    <div class="search-box flex">

        <div class="col-md-11">
            <form asp-controller="CarRent" asp-action="Index" method="get" class="form-inline form-flex">
                @await Html.PartialAsync("_CarSearchPartial")
            </form>
        </div>
    </div>
    <div class="table-responsive">

        <table class="table">
            <tr>
                <th>
                    Brand
                </th>
                <th>
                    Model
                </th>
                <th>
                    Body Type
                </th>
                <th>
                    Year
                </th>
                <th></th>
            </tr>
            @foreach (var c in Model.Cars)
            {
                <tr @(string.IsNullOrEmpty(c.CustomerId) ? "" : "class=danger") >
                    <td>
                        @Html.DisplayFor(m => c.Brand.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(m => c.Model.Name)
                    </td>
                    <td>
                        @Enum.GetName(typeof(CarRent.DataAccess.Models.CarBodyTypes), c.BodyType)
                    </td>
                    <td>
                        @Html.DisplayFor(m => c.Year)
                    </td>
                    <td>
                        @if (User.Identity.IsAuthenticated && string.IsNullOrEmpty(c.CustomerId))
                        {
                        <form asp-controller="CarRent" asp-action="Rent" asp-route-carId="@c.Id" novalidate>
                            <button type="submit" class="btn btn-link btn-icon" title="Rent"><span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span></button>
                        </form>
                        }
                    </td>
                </tr>
            }
        </table>

    </div>
    @if (Model.PageCount > 1)
    {
        <div>
            <div class="form-group">
                @Html.ActionLink("<", "Index",
                     new { selectedBrandId = Model.SelectedBrandId, selectedModelId = Model.SelectedModelId, page = Model.Page - 1 },
                     new { @elementDisable = (Model.Page == 0), @class = "btn btn-default" })
                <label>@(Model.Page + 1)</label>
                @Html.ActionLink(">", "Index",
                 new { selectedBrandId = Model.SelectedBrandId, selectedModelId = Model.SelectedModelId, page = Model.Page + 1 },
                 new { @elementDisable = (Model.Page == Model.PageCount - 1), @class = "btn btn-default" })

            </div>
        </div>
    }

    @section scripts
    {
        <script>
            utils.disableElementsOnReady('[elementdisable="True"]');
            utils.bindCarBrandsAndModels();
        </script>
    }
