@using CarRent.Models

@model CustomersListViewModel

@{
    ViewData["Title"] = "Customers";
}

<h2>@ViewData["Title"]</h2>

<div class="wrapper">
    <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
        <div class="search-box flex">

            <div class="col-md-11">
                <form asp-controller="Customer" asp-route-surnameQuery="@Model.SearchParams.SurnameQuery" asp-action="Index" method="get" class="form-inline form-flex">
                    <div class="form-group">
                        <input type="text" name="SurnameQuery" value="@Model.SearchParams.SurnameQuery" class="search-text form-control" placeholder="Search..." />
                    </div>
                    <button type="submit" class="btn btn-default">Search</button>
                </form>
            </div>
            <div class="col-md-1">
                <a asp-action="Create" class="btn btn-primary">Create</a>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table">
                <tr>
                    <th>
                        Last Name
                    </th>
                    <th>
                        First Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th>
                        Phone
                    </th>
                    <th></th>
                </tr>
                @foreach (var c in Model.Customers)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => c.Surname)
                        </td>
                        <td>
                            @Html.DisplayFor(m => c.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(m => c.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(m => c.PhoneNumber)
                        </td>
                        <td>
                            <form asp-controller="Customer" asp-action="Delete" asp-route-id="@c.Id" novalidate>
                                <a href="@Url.Action("Edit", "Customer", new { id = c.Id })" class="icon-action"> <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a>
                                <button type="submit" class="btn btn-link btn-icon" title="Delete">
                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </table>
        </div>
    @if (Model.PageCount > 1)
    { 
        <div>
            <div class="form-group">
                @Html.ActionLink("<", "Index",
                     new { surnameQuery = Model.SearchParams.SurnameQuery, page = Model.SearchParams.PageNumber - 1 },
                     new { @elementDisable = (Model.SearchParams.PageNumber == 0), @class = "btn btn-default" })
                <label >@Model.SearchParams.PageNumber</label>
                @Html.ActionLink(">", "Index",
                 new { surnameQuery = Model.SearchParams.SurnameQuery, page = Model.SearchParams.PageNumber + 1 },
                 new { @elementDisable = (Model.SearchParams.PageNumber == Model.PageCount - 1), @class = "btn btn-default" })

            </div>
        </div>
    }
    @section scripts
    {
        <script>
            utils.disableElementsOnReady('[elementdisable="True"]');
        </script>
    }
</div>
